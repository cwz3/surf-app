{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/charles/Desktop/weather/src/Wave.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\n\nfunction Wave() {\n  _s();\n\n  const [swell, setSwell] = useState({});\n  const [lng, setLng] = useState('');\n  const [lat, setLat] = useState(''); //const[height, setHeight] = useState({});\n  //const[direction, setDirection] = useState({});\n  //const[period, setPeriod] = useState({});\n\n  const search = evt => {\n    if (evt.key === \"Enter\") {\n      const params = 'swellHeight,swellDirection,swellPeriod';\n      fetch(`https://api.stormglass.io/v2/weather/point?lat=${lat}&lng=${lng}&params=${params}`, {\n        headers: {\n          'Authorization': '947985f0-4e3b-11eb-a422-0242ac130002-947986ea-4e3b-11eb-a422-0242ac130002'\n        }\n      }).then(response => response.json()).then(jsonData => {\n        console.log(jsonData);\n        setSwell(jsonData);\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Weather\",\n    children: /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-box\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }, this), typeof swell.data != \"undefined\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"wave-box\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"info\",\n            children: [swell.data.swellHeight, \" at \", swell.data.swellPeriod, \"Test\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this) : ' ']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Wave, \"XQCxwhFGG12RCV3XJD1fke56+6A=\");\n\n_c = Wave;\nexport default Wave;\n\nvar _c;\n\n$RefreshReg$(_c, \"Wave\");","map":{"version":3,"sources":["/Users/charles/Desktop/weather/src/Wave.js"],"names":["React","useState","Wave","swell","setSwell","lng","setLng","lat","setLat","search","evt","key","params","fetch","headers","then","response","json","jsonData","console","log","data","swellHeight","swellPeriod"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAA+B,OAA/B;;AAMA,SAASC,IAAT,GAAe;AAAA;;AACX,QAAK,CAACC,KAAD,EAAOC,QAAP,IAAmBH,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAK,CAACI,GAAD,EAAMC,MAAN,IAAgBL,QAAQ,CAAC,EAAD,CAA7B;AACA,QAAK,CAACM,GAAD,EAAMC,MAAN,IAAgBP,QAAQ,CAAC,EAAD,CAA7B,CAHW,CAIX;AACA;AACA;;AAGA,QAAMQ,MAAM,GAAGC,GAAG,IAAG;AACjB,QAAIA,GAAG,CAACC,GAAJ,KAAY,OAAhB,EAAwB;AAExB,YAAMC,MAAM,GAAG,wCAAf;AAEAC,MAAAA,KAAK,CAAE,kDAAiDN,GAAI,QAAOF,GAAI,WAAUO,MAAO,EAAnF,EAAsF;AACvFE,QAAAA,OAAO,EAAE;AACP,2BAAiB;AADV;AAD8E,OAAtF,CAAL,CAIKC,IAJL,CAIWC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EAJxB,EAIyCF,IAJzC,CAI+CG,QAAD,IAAc;AACxDC,QAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACAd,QAAAA,QAAQ,CAACc,QAAD,CAAR;AACD,OAPH;AAQH;AACJ,GAdG;;AAmBA,sBACI;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA,2BACI;AAAA,8BACA;AAAK,QAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,cADA,EAWE,OAAOf,KAAK,CAACkB,IAAb,IAAqB,WAAtB,gBACG;AAAA,+BACA;AAAK,UAAA,SAAS,EAAC,UAAf;AAAA,iCACI;AAAK,YAAA,SAAS,EAAC,MAAf;AAAA,uBACKlB,KAAK,CAACkB,IAAN,CAAWC,WADhB,UACiCnB,KAAK,CAACkB,IAAN,CAAWE,WAD5C;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,cADH,GAWO,GAtBR;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AA6BH;;GAzDQrB,I;;KAAAA,I;AA0DT,eAAeA,IAAf","sourcesContent":["import React, { useState }from 'react';\n\n\n\n\n\nfunction Wave(){\n    const[swell,setSwell] = useState({});\n    const[lng, setLng] = useState('');\n    const[lat, setLat] = useState('');\n    //const[height, setHeight] = useState({});\n    //const[direction, setDirection] = useState({});\n    //const[period, setPeriod] = useState({});\n\n\n    const search = evt =>{\n        if (evt.key === \"Enter\"){\n        \n        const params = 'swellHeight,swellDirection,swellPeriod';\n\n        fetch(`https://api.stormglass.io/v2/weather/point?lat=${lat}&lng=${lng}&params=${params}`, {\n            headers: {\n              'Authorization': '947985f0-4e3b-11eb-a422-0242ac130002-947986ea-4e3b-11eb-a422-0242ac130002'\n            }\n          }).then((response) => response.json()).then((jsonData) => {\n            console.log(jsonData);\n            setSwell(jsonData);\n          });\n    }\n}\n\n\n\n\n    return (\n        <div className=\"Weather\">\n            <main>\n            <div className=\"search-box\">\n          {/*<input \n            type=\"text\"\n            className=\"search-bar\"\n            placeholder=\"Search...\"\n            onChange={e => setQuery(e.target.value)}\n            value={query}\n            onKeyPress={search}\n          /> */}\n        </div>\n            {(typeof swell.data != \"undefined\") ? (\n                <div>\n                <div className=\"wave-box\">\n                    <div className=\"info\">\n                        {swell.data.swellHeight} at {swell.data.swellPeriod}\n                        Test\n                    </div>\n                    \n\n                </div>\n                </div>\n                ): (' ')}\n            </main>\n        </div>\n\n    )\n}\nexport default Wave;"]},"metadata":{},"sourceType":"module"}