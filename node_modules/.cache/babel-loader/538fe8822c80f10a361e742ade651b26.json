{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/charles/Desktop/weather/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Wave from './Wave';\n{\n  /*\n  const api = {\n   key: \"1a94c0e7608e7e5cf865f27d79784c58\",\n   base: \"https://api.openweathermap.org/data/2.5/\"\n  }\n  */\n}\n\nfunction App() {\n  _s();\n\n  {\n    /*\n    const[query, setQuery] = useState('');\n    const[weather, setWeather] = useState({});\n    const search = evt =>{\n     if (evt.key === \"Enter\"){\n       fetch(`${api.base}weather?q=${query}&units=metric&APPID=${api.key}`)\n       .then(res => res.json())\n       .then(result => {\n         setWeather(result);\n         setQuery('');\n         console.log(result);\n      });\n    }\n    }\n    */\n  }\n  const [swell, setSwell] = useState({});\n  const [lng, setLng] = useState();\n  const [lat, setLat] = useState();\n  const params = 'swellHeight,swellDirection,swellPeriod';\n\n  const search1 = evt => {\n    if (evt.key === \"Enter\") {\n      fetch(`https://api.stormglass.io/v2/weather/point?lat=${lat}&lng=${lng}&params=${params}`, {\n        headers: {\n          'Authorization': '947985f0-4e3b-11eb-a422-0242ac130002-947986ea-4e3b-11eb-a422-0242ac130002'\n        }\n      }).then(response => response.json()).then(jsonData => {\n        console.log(jsonData);\n        setSwell(jsonData);\n        setLng();\n        setLat();\n      });\n    }\n  };\n\n  {\n    /*\n    const dateBuilder = (d) =>{\n     let months = [\"January\",\"February\",\"March\",\"April\",\"May\",\"June\",\"July\",\n     \"August\",\"September\",\"October\",\"November\",\"December\"];\n     let days = [\"Sunday\",\"Monday\",\"Tuesday\",\"Wednesday\",\n    \"Thursday\",\"Friday\",\"Saturday\"];\n      let day = days[d.getDay()];\n     let date = d.getDate();\n     let month = months[d.getMonth()];\n     let year = d.getFullYear();\n        return `${day} ${date} ${month} ${year}`\n    }\n    */\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-box\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"search-bar\",\n          placeholder: \"Search...\",\n          onChange: e => setQuery(e.target.value),\n          value: query,\n          onKeyPress: search\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), typeof weather.main != \"undefined\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"location-box\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"location\",\n            children: [weather.name, \",\", weather.sys.country]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"date\",\n            children: dateBuilder(new Date())\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"weather-box\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"temp\",\n            children: [Math.round(weather.main.temp), \"\\u02DAC\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"weather\",\n            children: weather.weather[0].main\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this) : ' ', /*#__PURE__*/_jsxDEV(Wave, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"KFM6OCDxhGdQfIFPZJ3FgKGPGPI=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/charles/Desktop/weather/src/App.js"],"names":["React","useState","Wave","App","swell","setSwell","lng","setLng","lat","setLat","params","search1","evt","key","fetch","headers","then","response","json","jsonData","console","log","e","setQuery","target","value","query","search","weather","main","name","sys","country","dateBuilder","Date","Math","round","temp"],"mappings":"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","sourcesContent":["import React, { useState }from 'react';\nimport Wave from './Wave';\n{/*\nconst api = {\n  key: \"1a94c0e7608e7e5cf865f27d79784c58\",\n  base: \"https://api.openweathermap.org/data/2.5/\"\n}\n*/}\n\nfunction App() {\n\n  {/*\n  const[query, setQuery] = useState('');\n  const[weather, setWeather] = useState({});\n\n  const search = evt =>{\n    if (evt.key === \"Enter\"){\n      fetch(`${api.base}weather?q=${query}&units=metric&APPID=${api.key}`)\n      .then(res => res.json())\n      .then(result => {\n        setWeather(result);\n        setQuery('');\n        console.log(result);\n\n    });\n  }\n}\n*/}\n  const[swell,setSwell] = useState({});\n    const[lng, setLng] = useState();\n    const[lat, setLat] = useState();\n    const params = 'swellHeight,swellDirection,swellPeriod';\n\n  const search1 = evt =>{\n    if (evt.key === \"Enter\"){\n    fetch(`https://api.stormglass.io/v2/weather/point?lat=${lat}&lng=${lng}&params=${params}`, {\n        headers: {\n          'Authorization': '947985f0-4e3b-11eb-a422-0242ac130002-947986ea-4e3b-11eb-a422-0242ac130002'\n        }\n      }).then((response) => response.json()).then((jsonData) => {\n        console.log(jsonData);\n        setSwell(jsonData);\n        setLng();\n        setLat();\n      });\n  }\n  }\n\n  {/*\n  const dateBuilder = (d) =>{\n    let months = [\"January\",\"February\",\"March\",\"April\",\"May\",\"June\",\"July\",\n    \"August\",\"September\",\"October\",\"November\",\"December\"];\n    let days = [\"Sunday\",\"Monday\",\"Tuesday\",\"Wednesday\",\n  \"Thursday\",\"Friday\",\"Saturday\"];\n\n    let day = days[d.getDay()];\n    let date = d.getDate();\n    let month = months[d.getMonth()];\n    let year = d.getFullYear();\n  \n    return `${day} ${date} ${month} ${year}`\n  }\n*/}\n  \n\n\n\n  return (\n    <div className=\"app\">\n      <main>\n        <div className=\"search-box\">\n          <input \n            type=\"text\"\n            className=\"search-bar\"\n            placeholder=\"Search...\"\n            onChange={e => setQuery(e.target.value)}\n            value={query}\n            onKeyPress={search}\n            />\n        </div>\n        {(typeof weather.main != \"undefined\") ? (\n        <div>\n        <div className=\"location-box\">\n              <div className=\"location\">{weather.name},{weather.sys.country}</div>\n              <div className=\"date\">{dateBuilder(new Date())}</div>\n            \n            </div>\n            <div className=\"weather-box\">\n              <div className=\"temp\">\n                {Math.round(weather.main.temp)}˚C\n              </div>\n              <div className=\"weather\">{weather.weather[0].main}</div>\n            </div>\n          </div>\n          ): (' ')}\n\n          <Wave />\n         \n\n\n\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}