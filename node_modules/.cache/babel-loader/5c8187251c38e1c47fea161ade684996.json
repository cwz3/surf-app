{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/charles/Desktop/weather/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Wave from './Wave';\n{\n  /*\n  const api = {\n   key: \"1a94c0e7608e7e5cf865f27d79784c58\",\n   base: \"https://api.openweathermap.org/data/2.5/\"\n  }\n  */\n}\n\nfunction App() {\n  _s();\n\n  {\n    /*\n    const[query, setQuery] = useState('');\n    const[weather, setWeather] = useState({});\n    const search = evt =>{\n     if (evt.key === \"Enter\"){\n       fetch(`${api.base}weather?q=${query}&units=metric&APPID=${api.key}`)\n       .then(res => res.json())\n       .then(result => {\n         setWeather(result);\n         setQuery('');\n         console.log(result);\n      });\n    }\n    }\n    */\n  }\n  const [swell, setSwell] = useState({});\n  const [lng, setLng] = useState();\n  const [lat, setLat] = useState();\n  const params = 'swellHeight,swellDirection,swellPeriod';\n\n  const search1 = evt => {\n    if (evt.key === \"Enter\") {\n      fetch(`https://api.stormglass.io/v2/weather/point?lat=${lat}&lng=${lng}&params=${params}`, {\n        headers: {\n          'Authorization': '947985f0-4e3b-11eb-a422-0242ac130002-947986ea-4e3b-11eb-a422-0242ac130002'\n        }\n      }).then(response => response.json()).then(jsonData => {\n        console.log(jsonData);\n        setSwell(jsonData);\n        setLng();\n        setLat();\n      });\n    }\n  };\n\n  {\n    /*\n    const dateBuilder = (d) =>{\n     let months = [\"January\",\"February\",\"March\",\"April\",\"May\",\"June\",\"July\",\n     \"August\",\"September\",\"October\",\"November\",\"December\"];\n     let days = [\"Sunday\",\"Monday\",\"Tuesday\",\"Wednesday\",\n    \"Thursday\",\"Friday\",\"Saturday\"];\n      let day = days[d.getDay()];\n     let date = d.getDate();\n     let month = months[d.getMonth()];\n     let year = d.getFullYear();\n        return `${day} ${date} ${month} ${year}`\n    }\n    */\n  }\n  /*(\n    <div className=\"app\">\n      <main>\n        <div className=\"search-box\">\n          <input \n            type=\"text\"\n            className=\"search-bar\"\n            placeholder=\"Search...\"\n            onChange={e => setQuery(e.target.value)}\n            value={query}\n            onKeyPress={search}\n            />\n        </div>\n        {(typeof weather.main != \"undefined\") ? (\n        <div>\n        <div className=\"location-box\">\n              <div className=\"location\">{weather.name},{weather.sys.country}</div>\n              <div className=\"date\">{dateBuilder(new Date())}</div>\n            \n            </div>\n            <div className=\"weather-box\">\n              <div className=\"temp\">\n                {Math.round(weather.main.temp)}˚C\n              </div>\n              <div className=\"weather\">{weather.weather[0].main}</div>\n            </div>\n          </div>\n          ): (' ')}\n           <Wave />\n         \n  \n      </main>\n    </div>\n        );*/\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Weather\",\n    children: /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-box\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 15\n      }, this), typeof swell.data != \"undefined\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"wave-box\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"info\",\n            children: [swell.data.swellHeight, \" at \", swell.data.swellPeriod, \"Test\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 23\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 19\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 19\n      }, this) : ' ']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 15\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 11\n  }, this);\n}\n\n_s(App, \"KFM6OCDxhGdQfIFPZJ3FgKGPGPI=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/charles/Desktop/weather/src/App.js"],"names":["React","useState","Wave","App","swell","setSwell","lng","setLng","lat","setLat","params","search1","evt","key","fetch","headers","then","response","json","jsonData","console","log","data","swellHeight","swellPeriod"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAA+B,OAA/B;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA;AAAC;AACD;AACA;AACA;AACA;AACA;AAAG;;AAEH,SAASC,GAAT,GAAe;AAAA;;AAEb;AAAC;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEG;AACD,QAAK,CAACC,KAAD,EAAOC,QAAP,IAAmBJ,QAAQ,CAAC,EAAD,CAAhC;AACE,QAAK,CAACK,GAAD,EAAMC,MAAN,IAAgBN,QAAQ,EAA7B;AACA,QAAK,CAACO,GAAD,EAAMC,MAAN,IAAgBR,QAAQ,EAA7B;AACA,QAAMS,MAAM,GAAG,wCAAf;;AAEF,QAAMC,OAAO,GAAGC,GAAG,IAAG;AACpB,QAAIA,GAAG,CAACC,GAAJ,KAAY,OAAhB,EAAwB;AACxBC,MAAAA,KAAK,CAAE,kDAAiDN,GAAI,QAAOF,GAAI,WAAUI,MAAO,EAAnF,EAAsF;AACvFK,QAAAA,OAAO,EAAE;AACP,2BAAiB;AADV;AAD8E,OAAtF,CAAL,CAIKC,IAJL,CAIWC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EAJxB,EAIyCF,IAJzC,CAI+CG,QAAD,IAAc;AACxDC,QAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACAd,QAAAA,QAAQ,CAACc,QAAD,CAAR;AACAZ,QAAAA,MAAM;AACNE,QAAAA,MAAM;AACP,OATH;AAUD;AACA,GAbD;;AAeA;AAAC;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEG;AAKD;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIQ,sBACE;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA,2BACI;AAAA,8BACA;AAAK,QAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,cADA,EAIE,OAAOL,KAAK,CAACkB,IAAb,IAAqB,WAAtB,gBACG;AAAA,+BACA;AAAK,UAAA,SAAS,EAAC,UAAf;AAAA,iCACI;AAAK,YAAA,SAAS,EAAC,MAAf;AAAA,uBACKlB,KAAK,CAACkB,IAAN,CAAWC,WADhB,UACiCnB,KAAK,CAACkB,IAAN,CAAWE,WAD5C;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,cADH,GAWO,GAfR;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADF;AAsBP;;GArHQrB,G;;KAAAA,G;AAuHT,eAAeA,GAAf","sourcesContent":["import React, { useState }from 'react';\nimport Wave from './Wave';\n{/*\nconst api = {\n  key: \"1a94c0e7608e7e5cf865f27d79784c58\",\n  base: \"https://api.openweathermap.org/data/2.5/\"\n}\n*/}\n\nfunction App() {\n\n  {/*\n  const[query, setQuery] = useState('');\n  const[weather, setWeather] = useState({});\n\n  const search = evt =>{\n    if (evt.key === \"Enter\"){\n      fetch(`${api.base}weather?q=${query}&units=metric&APPID=${api.key}`)\n      .then(res => res.json())\n      .then(result => {\n        setWeather(result);\n        setQuery('');\n        console.log(result);\n\n    });\n  }\n}\n*/}\n  const[swell,setSwell] = useState({});\n    const[lng, setLng] = useState();\n    const[lat, setLat] = useState();\n    const params = 'swellHeight,swellDirection,swellPeriod';\n\n  const search1 = evt =>{\n    if (evt.key === \"Enter\"){\n    fetch(`https://api.stormglass.io/v2/weather/point?lat=${lat}&lng=${lng}&params=${params}`, {\n        headers: {\n          'Authorization': '947985f0-4e3b-11eb-a422-0242ac130002-947986ea-4e3b-11eb-a422-0242ac130002'\n        }\n      }).then((response) => response.json()).then((jsonData) => {\n        console.log(jsonData);\n        setSwell(jsonData);\n        setLng();\n        setLat();\n      });\n  }\n  }\n\n  {/*\n  const dateBuilder = (d) =>{\n    let months = [\"January\",\"February\",\"March\",\"April\",\"May\",\"June\",\"July\",\n    \"August\",\"September\",\"October\",\"November\",\"December\"];\n    let days = [\"Sunday\",\"Monday\",\"Tuesday\",\"Wednesday\",\n  \"Thursday\",\"Friday\",\"Saturday\"];\n\n    let day = days[d.getDay()];\n    let date = d.getDate();\n    let month = months[d.getMonth()];\n    let year = d.getFullYear();\n  \n    return `${day} ${date} ${month} ${year}`\n  }\n*/}\n  \n\n\n\n  /*(\n    <div className=\"app\">\n      <main>\n        <div className=\"search-box\">\n          <input \n            type=\"text\"\n            className=\"search-bar\"\n            placeholder=\"Search...\"\n            onChange={e => setQuery(e.target.value)}\n            value={query}\n            onKeyPress={search}\n            />\n        </div>\n        {(typeof weather.main != \"undefined\") ? (\n        <div>\n        <div className=\"location-box\">\n              <div className=\"location\">{weather.name},{weather.sys.country}</div>\n              <div className=\"date\">{dateBuilder(new Date())}</div>\n            \n            </div>\n            <div className=\"weather-box\">\n              <div className=\"temp\">\n                {Math.round(weather.main.temp)}˚C\n              </div>\n              <div className=\"weather\">{weather.weather[0].main}</div>\n            </div>\n          </div>\n          ): (' ')}\n\n          <Wave />\n         \n\n\n\n      </main>\n    </div>\n        );*/\n        return (\n          <div className=\"Weather\">\n              <main>\n              <div className=\"search-box\">\n           \n          </div>\n              {(typeof swell.data != \"undefined\") ? (\n                  <div>\n                  <div className=\"wave-box\">\n                      <div className=\"info\">\n                          {swell.data.swellHeight} at {swell.data.swellPeriod}\n                          Test\n                      </div>\n                      \n  \n                  </div>\n                  </div>\n                  ): (' ')}\n              </main>\n          </div>\n  \n      )\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}